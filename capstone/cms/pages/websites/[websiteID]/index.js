import {
    Button,
    Flex,
    Box,
    FormControl,
    FormErrorMessage,
    FormLabel,
    Input,
    Center,
    Text,
    Modal,
    ModalBody,
    ModalCloseButton,
    ModalContent,
    ModalFooter,
    ModalHeader,
    ModalOverlay,
    Spacer,
    Textarea,
    useDisclosure
  } from '@chakra-ui/react'
import { useSession } from 'next-auth/react'
  import { useRouter } from 'next/router'
  import React, { useState } from 'react'
  import { useForm } from 'react-hook-form'

export default function WebsiteHome() {
    const { isOpen, onOpen, onClose } = useDisclosure()
    const router = useRouter()
    const { data: session } = useSession()

    const {
        handleSubmit,
        register,
        formState: { errors, isSubmitting },
    } = useForm()

    const initialRef = React.useRef(null)

    const onSubmit = handleSubmit(async (data) => {
        console.log(data)
        onClose()
    })
    return (
        <>
        <Text fontSize="22px" p="10px">Website home page to update/delete website information</Text>
        <form onSubmit={onSubmit}>
        <FormControl bg="#FFFFFF" p="12px" borderRadius="xl" w="500px" ml="auto" mr="auto">
                <FormControl isRequired>
                  <Flex>
                    <FormLabel htmlFor="name">Website Name</FormLabel>
                  </Flex>
                  <Input
                    maxLength={50}
                    id="name"
                    defaultValue="Mama's Recipes"
                    {...register('name', {
                      required: 'This is required',
                    })}
                  />
                  <FormErrorMessage>{errors.name && errors.name.message}</FormErrorMessage>
                </FormControl>
                <FormControl mt={4} isRequired>
                  <FormLabel htmlFor="description">Website Description</FormLabel>
                  <Textarea
                    maxLength={200}
                    id="description"
                    defaultValue="This is the description for my website auto generated by the quick website engine. Here I will put all of my mom's amazing recipes for the world to see. Enjoy!"
                    {...register('description', {
                      required: 'This is required',
                    })}
                  />
                  <FormErrorMessage>{errors.name && errors.name.message}</FormErrorMessage>
                </FormControl>
                <FormControl mt={4} isRequired>
                  <FormLabel htmlFor="fullname">Full Name</FormLabel>
                  <Input
                    maxLength={50}
                    id="fullname"
                    defaultValue={session?.user?.name}
                    {...register('fullname', {
                      required: 'This is required',
                    })}
                  />
                  <FormErrorMessage>{errors.name && errors.name.message}</FormErrorMessage>
                </FormControl>
                <FormControl mt={4} isRequired>
                  <FormLabel htmlFor="url">URL Address</FormLabel>
                  <Input
                    id="url"
                    defaultValue="https://www.autogeneratedURL.com"
                    {...register('url', {
                      required: 'This is required',
                    })}
                  />
                  <FormErrorMessage>{errors.name && errors.name.message}</FormErrorMessage>
                </FormControl>
                <Flex mt="10px">
                    <Button
                    isLoading={isSubmitting}
                    type="submit"
                    bgColor="red"
                    rounded="md"
                    textColor="white"
                    fontSize="sm"
                    fontWeight="semibold"
                    >
                        Delete
                    </Button>
                    <Spacer/>
                    <Button
                    isLoading={isSubmitting}
                    type="submit"
                    bgColor="#5552f6"
                    rounded="md"
                    textColor="white"
                    fontSize="sm"
                    fontWeight="semibold"
                    >
                        Edit
                    </Button>   
                </Flex>
              </FormControl>
              </form>
        </>
    )
}